// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/exercises": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Create a couple of exercises",
                "parameters": [
                    {
                        "description": "Exercises",
                        "name": "exercises",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/exercise.ExerciseRecord"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{user_id}/origins/{origin_id}/exercises": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "exercises"
                ],
                "summary": "Get exercises based on query parameters",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Start time in Unix timestamp",
                        "name": "started_at",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Finish time in Unix timestamp",
                        "name": "finished_at",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Origin ID",
                        "name": "origin_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "exercise.ExerciseData": {
            "type": "object",
            "required": [
                "finished_at",
                "started_at",
                "weight"
            ],
            "properties": {
                "finished_at": {
                    "type": "integer"
                },
                "started_at": {
                    "type": "integer"
                },
                "weight": {
                    "type": "integer"
                }
            }
        },
        "exercise.ExerciseRecord": {
            "type": "object",
            "required": [
                "data",
                "origin_id",
                "user_id"
            ],
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/exercise.ExerciseData"
                    }
                },
                "origin_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
