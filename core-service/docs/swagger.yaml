definitions:
  auth.Credentials:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  machine.MachineData:
    properties:
      name:
        maxLength: 32
        minLength: 3
        type: string
      origin_id:
        minLength: 3
        type: string
    required:
    - name
    - origin_id
    type: object
  user.UserData:
    properties:
      email:
        type: string
      password:
        maxLength: 32
        minLength: 3
        type: string
      username:
        maxLength: 32
        minLength: 3
        type: string
    required:
    - email
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /admin/machines/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Machine Data
        in: body
        name: machineData
        required: true
        schema:
          $ref: '#/definitions/machine.MachineData'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema: {}
  /admin/machines/{id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
    put:
      consumes:
      - application/json
      parameters:
      - description: Machine Data
        in: body
        name: machineData
        required: true
        schema:
          $ref: '#/definitions/machine.MachineData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /admin/users/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
    post:
      consumes:
      - application/json
      parameters:
      - description: User Data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/user.UserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /admin/users/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: User Data
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/user.UserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /admin/users/{id}/rfids/{rfid}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: RFID
        in: path
        name: rfid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /auth/admin/login/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/auth.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /auth/login/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/auth.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /machines/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /rfids/{id}/user:
    get:
      consumes:
      - application/json
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
  /users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
swagger: "2.0"
